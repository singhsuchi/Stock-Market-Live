{"ast":null,"code":"import _classCallCheck from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/suchitanew/Downloads/stocks-master/src/components/Table.jsx\";\nimport React from 'react';\nimport * as bulma from \"reactbulma\";\nimport StocksList from \"./StocksList.jsx\";\nimport StocksGraph from \"./StocksGraph.jsx\";\nimport Status from \"./Status.jsx\";\nimport SearchBox from \"./SearchBox.jsx\";\nvar stocksUrl = 'ws://stocks.mnet.website/';\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Table, _React$Component);\n\n  function Table() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stocks: {},\n      connectionError: false\n    };\n\n    _this.componentDidMount = function () {\n      _this.connection = new WebSocket(stocksUrl);\n      _this.connection.onmessage = _this.saveNewStockValues;\n\n      _this.connection.onclose = function () {\n        _this.setState({\n          connectionError: true\n        });\n      };\n    };\n\n    _this.createSelectItems = function () {\n      var items = [];\n      Object.keys(_this.state.stocks).map(function (stock_name, index) {\n        items.push(React.createElement(\"option\", {\n          key: index,\n          value: stock_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, stock_name));\n      });\n      return items;\n    };\n\n    _this.saveNewStockValues = function (event) {\n      _this.props.hideSpinner();\n\n      var result = JSON.parse(event.data);\n      var current_time = Date.now();\n      var newStocks = _this.state.stocks;\n      result.map(function (stock) {\n        // stock = ['name', 'value']\n        if (_this.state.stocks[stock[0]]) {\n          newStocks[stock[0]].current_value = Number(stock[1]);\n          newStocks[stock[0]].history.push({\n            time: current_time,\n            value: Number(stock[1])\n          });\n        } else {\n          newStocks[stock[0]] = {\n            current_value: stock[1],\n            history: [{\n              time: Date.now(),\n              value: Number(stock[1])\n            }]\n          };\n        }\n      });\n\n      _this.setState({\n        stocks: newStocks\n      });\n    };\n\n    _this.resetData = function () {\n      var newStocks = _this.state.stocks;\n      Object.keys(_this.state.stocks).map(function (stock_name, index) {\n        newStocks[stock_name].history = [newStocks[stock_name].history.pop()];\n      });\n\n      _this.setState({\n        stocks: newStocks\n      });\n    };\n\n    _this.loaded = function () {\n      return Object.keys(_this.state.stocks).length > 0;\n    };\n\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      var countriesList = this.state.stocks.length > 0 && this.state.stocks.map(function (stock_name, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: stock_name.stock_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, stock_name);\n      }, this);\n      return React.createElement(\"div\", {\n        className: \"pd3 tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(SearchBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        stocks: countriesList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(StocksList, {\n        stocks: this.state.stocks,\n        resetData: this.resetData,\n        loaded: this.loaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.props.showSpinner ? 'modal is-active' : 'modal',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Status, {\n        connectionError: this.state.connectionError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Table;\n}(React.Component);\n\nexport default Table;","map":{"version":3,"sources":["/Users/suchitanew/Downloads/stocks-master/src/components/Table.jsx"],"names":["React","bulma","StocksList","StocksGraph","Status","SearchBox","stocksUrl","Table","state","stocks","connectionError","componentDidMount","connection","WebSocket","onmessage","saveNewStockValues","onclose","setState","createSelectItems","items","Object","keys","map","stock_name","index","push","event","props","hideSpinner","result","JSON","parse","data","current_time","Date","now","newStocks","stock","current_value","Number","history","time","value","resetData","pop","loaded","length","countriesList","i","showSpinner","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as bulma from \"reactbulma\";\nimport StocksList from \"./StocksList.jsx\";\nimport StocksGraph from \"./StocksGraph.jsx\";\nimport Status from \"./Status.jsx\";\nimport SearchBox from \"./SearchBox.jsx\";\n\nconst stocksUrl = 'ws://stocks.mnet.website/';\n\nclass Table extends React.Component {\n\n  state = {\n   stocks: {},\n   connectionError: false\n  }\n\n  componentDidMount = () => {\n    this.connection = new WebSocket(stocksUrl);\n    this.connection.onmessage = this.saveNewStockValues;\n    this.connection.onclose = () => { this.setState({connectionError: true}) }\n  }\n\n\n  createSelectItems = () =>{\n     let items = [];         \n     Object.keys(this.state.stocks).map((stock_name, index) =>\n              {\n                  items.push(<option key={index} value={stock_name}>{stock_name}</option>);  \n            }\n          )\n     return items;\n  } ;\n\n\n  saveNewStockValues = (event) => {\n    this.props.hideSpinner();\n    let result = JSON.parse(event.data);\n    let current_time = Date.now();\n    let newStocks = this.state.stocks\n    result.map((stock) =>\n    {\n      // stock = ['name', 'value']\n      if(this.state.stocks[stock[0]])\n      {\n        \n\n        newStocks[stock[0]].current_value = Number(stock[1])\n        newStocks[stock[0]].history.push({time: current_time, value: Number(stock[1])})\n      }\n      else\n      {\n        newStocks[stock[0]] = { current_value: stock[1], history: [{time: Date.now(), value: Number(stock[1])}] }\n      }\n    });\n    this.setState({stocks: newStocks})\n  }\n\n  resetData = () => {\n    let newStocks = this.state.stocks;\n    Object.keys(this.state.stocks).map((stock_name, index) =>\n    {\n      newStocks[stock_name].history = [newStocks[stock_name].history.pop()];\n    });\n    this.setState({ stocks: newStocks });\n  }\n\n  loaded = () => {\n    return Object.keys(this.state.stocks).length > 0;\n  }\n\n  render() {\n\n  let countriesList = this.state.stocks.length > 0\n    && this.state.stocks.map((stock_name, i) => {\n    return (\n      <option key={i} value={stock_name.stock_name}>{stock_name}</option>\n    )\n  }, this);\n    return (\n\n      <div className='pd3 tc'>\n        <SearchBox/>\n        <select stocks={countriesList}/>\n        <div className='columns'>\n          <StocksList\n            stocks={this.state.stocks}\n            resetData={this.resetData}\n            loaded={this.loaded}\n          />\n          \n        </div>\n       \n        <div className={ this.props.showSpinner ? 'modal is-active' : 'modal' }>\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-content\">\n            <Status connectionError={this.state.connectionError} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}