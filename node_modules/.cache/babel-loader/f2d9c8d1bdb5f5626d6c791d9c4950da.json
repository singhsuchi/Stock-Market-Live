{"ast":null,"code":"import _classCallCheck from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/suchitanew/Downloads/stocks-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/suchitanew/Downloads/stocks-master/src/components/Table.jsx\";\nimport React from 'react';\nimport * as bulma from \"reactbulma\";\nimport StocksList from \"./StocksList.jsx\";\nimport StocksGraph from \"./StocksGraph.jsx\";\nimport Status from \"./Status.jsx\";\nimport SearchBox from \"./SearchBox.jsx\";\nvar stocksUrl = 'ws://stocks.mnet.website/';\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Table, _React$Component);\n\n  function Table() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stocks: {},\n      connectionError: false,\n      searchField: ''\n    };\n\n    _this.componentDidMount = function () {\n      _this.connection = new WebSocket(stocksUrl);\n      _this.connection.onmessage = _this.saveNewStockValues;\n\n      _this.connection.onclose = function () {\n        _this.setState({\n          connectionError: true\n        });\n      };\n    };\n\n    _this.onSearchChanges = function (event) {\n      _this.setState({\n        stocks: newStocks,\n        searchField: event.target.value\n      });\n    };\n\n    _this.saveNewStockValues = function (event) {\n      _this.props.hideSpinner();\n\n      var result = JSON.parse(event.data);\n      var current_time = Date.now();\n      var newStocks = _this.state.stocks;\n      result.map(function (stock) {\n        // stock = ['name', 'value']\n        if (_this.state.stocks[stock[0]]) {\n          newStocks[stock[0]].current_value = Number(stock[1]);\n          newStocks[stock[0]].history.push({\n            time: current_time,\n            value: Number(stock[1])\n          });\n        } else {\n          newStocks[stock[0]] = {\n            current_value: stock[1],\n            history: [{\n              time: Date.now(),\n              value: Number(stock[1])\n            }]\n          };\n        }\n      });\n\n      _this.setState({\n        stocks: newStocks\n      });\n    };\n\n    _this.resetData = function () {\n      var newStocks = _this.state.stocks;\n      Object.keys(_this.state.stocks).map(function (stock_name, index) {\n        newStocks[stock_name].history = [newStocks[stock_name].history.pop()];\n      });\n\n      _this.setState({\n        stocks: newStocks\n      });\n    };\n\n    _this.loaded = function () {\n      return Object.keys(_this.state.stocks).length > 0;\n    };\n\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filterStocks = this.state.stocks.filters(function (stocks) {\n        return stocks.stock_name.toLoweCase().includes(_this2.state.searchField.toLoweCase);\n      });\n      return React.createElement(\"div\", {\n        className: \"pd3 mg3 tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(SearchBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(StocksList, {\n        stocks: filterStocks,\n        resetData: this.resetData,\n        loaded: this.loaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.props.showSpinner ? 'modal is-active' : 'modal',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Status, {\n        connectionError: this.state.connectionError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Table;\n}(React.Component);\n\nexport default Table;","map":{"version":3,"sources":["/Users/suchitanew/Downloads/stocks-master/src/components/Table.jsx"],"names":["React","bulma","StocksList","StocksGraph","Status","SearchBox","stocksUrl","Table","state","stocks","connectionError","searchField","componentDidMount","connection","WebSocket","onmessage","saveNewStockValues","onclose","setState","onSearchChanges","event","newStocks","target","value","props","hideSpinner","result","JSON","parse","data","current_time","Date","now","map","stock","current_value","Number","history","push","time","resetData","Object","keys","stock_name","index","pop","loaded","length","filterStocks","filters","toLoweCase","includes","showSpinner","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as bulma from \"reactbulma\";\nimport StocksList from \"./StocksList.jsx\";\nimport StocksGraph from \"./StocksGraph.jsx\";\nimport Status from \"./Status.jsx\";\nimport SearchBox from \"./SearchBox.jsx\";\n\nconst stocksUrl = 'ws://stocks.mnet.website/';\n\nclass Table extends React.Component {\n\n  state = {\n   stocks: {},\n   connectionError: false,\n   searchField: ''\n  }\n\n  componentDidMount = () => {\n    this.connection = new WebSocket(stocksUrl);\n    this.connection.onmessage = this.saveNewStockValues;\n    this.connection.onclose = () => { this.setState({connectionError: true}) }\n  }\n\n\n  onSearchChanges =(event) =>{\n    this.setState({stocks: newStocks,searchField:event.target.value})\n\n  }\n\n\n  saveNewStockValues = (event) => {\n    this.props.hideSpinner();\n    let result = JSON.parse(event.data);\n    let current_time = Date.now();\n    let newStocks = this.state.stocks\n    result.map((stock) =>\n    {\n      // stock = ['name', 'value']\n      if(this.state.stocks[stock[0]])\n      {\n        \n\n        newStocks[stock[0]].current_value = Number(stock[1])\n        newStocks[stock[0]].history.push({time: current_time, value: Number(stock[1])})\n      }\n      else\n      {\n        newStocks[stock[0]] = { current_value: stock[1], history: [{time: Date.now(), value: Number(stock[1])}] }\n      }\n    });\n    this.setState({stocks: newStocks})\n  }\n\n  resetData = () => {\n    let newStocks = this.state.stocks;\n    Object.keys(this.state.stocks).map((stock_name, index) =>\n    {\n      newStocks[stock_name].history = [newStocks[stock_name].history.pop()];\n    });\n    this.setState({ stocks: newStocks });\n  }\n\n  loaded = () => {\n    return Object.keys(this.state.stocks).length > 0;\n  }\n\n  render() {\n\n  const filterStocks= this.state.stocks.filters(stocks =>{\n      return stocks.stock_name.toLoweCase().includes(this.state.searchField.toLoweCase)\n    })\n    return (\n\n      <div className='pd3 mg3 tc'>\n        <SearchBox/>\n        \n        <div className='columns'>\n          <StocksList\n            stocks={filterStocks}\n            resetData={this.resetData}\n            loaded={this.loaded}\n          />\n          \n        </div>\n       \n        <div className={ this.props.showSpinner ? 'modal is-active' : 'modal' }>\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-content\">\n            <Status connectionError={this.state.connectionError} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}